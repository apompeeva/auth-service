# Default values for auth_service_pompeeva.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: aipompeeva/auth-service-shift
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8001

ingress:
  enabled: false


resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 128Mi

readinessProbe:
  httpGet:
    path: /healthz/ready
    port: 8001

# Additional volumes on the output Deployment definition.
volumes:
- name: pompeeva-images
  persistentVolumeClaim:
    claimName: images-pvc-pompeeva

#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: pompeeva-images
    mountPath: "/images"
    readOnly: false

nodeSelector: {}

tolerations: []

affinity: {}

app:
  data:
    expiration_time: "30"
    kafka_host: "infra-kafka-controller-headless"
    kafka_port: "9092"
    topic: "verification"
    db_host: "postgres-service"
    db_port: "5432"
    db_name: "apompeeva"
    jaeger_agent_host: "infra-jaeger-agent"
    jaeger_agent_port: "6831"
